#include "../common.inc"

#include "macros/vpanel.edc"
#include "macros/fd_entity.edc"

#define RIGHT "right-"
#define LEFT "left-"

	images { 
#include "img/images.edc" 
	}

	fonts { 
#include "fonts/fonts.edc"
	}

// author: tokyo
// esmart.filedialog by atmos
// iio for euphoria
// various fixed by trill

	collections { 
	group { name, "euphoria"; min, 413 94; max, 413 94;

	data {
		item, "shaped" "you bet";
	}

	script {
		public message (Msg_Type:type, id, ...)
		{
			switch (id) {
				case MSG_ID_SET_SONGNAME: {
					new buf[128];

					if (type != MSG_STRING_SET || numargs () < 5)
						return;

					getsarg (2, buf, 128);
					set_text (PART:"artist_name", buf);

					getsarg (3, buf, 128);
					set_text (PART:"song_name", buf);

					getsarg (4, buf, 128);
					set_text (PART:"album_name", buf);
				}
			}
		}
	}

	    parts { 
#include "collections/base_to.edc" 
	    }
	    programs { 
#include "programs/controls_to.edc" 
	    }
	}

	group { name, "playlist_item"; min, 122 9; max, 122 9;	
	parts { 
#include "collections/playlist.edc" 
	}
	programs { 
#include "programs/playlist.edc" 
	    } 
	}
/*
	group { name, "alternate"; min, 93 187; max, 93 187;
	parts { 
#include "collections/switch.edc" 
	    }
	programs { 
#include "programs/switch.edc" 
	    } 
	}
*/
group { name, "esmart.filedialog"; min, 413 188; max, 413 9999;
	data {
#include "hashes/containers.edc"
#include "hashes/window.edc"
	}

	parts { 
#include "collections/esmart_fd.edc" 
	    }
	programs { 
#include "programs/esmart_fd.edc" 
	    } 
	}
	group { name, "esmart.filedialog.file"; min, 80 15; max, 800 15;
	    parts {
		FD_ENTITY("file", 1.0 0.5)
	    }
	    programs {
		FD_ENTITY_PROGS("file")
	    }
	}
	group { name, "esmart.filedialog.directory"; min, 80 15; max, 800 15;
	    parts {
		FD_ENTITY("directory", 0.0 0.5)
	    }
	    programs {
		FD_ENTITY_DIRECTORY_PROGS("directory")
	    }
	}
}
